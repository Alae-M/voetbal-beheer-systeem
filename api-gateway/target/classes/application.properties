# Application and server configuration
spring.application.name=api-gateway
server.port=8080

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=455174757172-263dofi9k7fj8rqv33n40qfuq7cvb9c7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Spring Cloud Gateway Configuration
spring.cloud.gateway.routes[0].id=leden-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/leden/**

spring.cloud.gateway.routes[1].id=team-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/teams/**

spring.cloud.gateway.routes[2].id=wedstrijd-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/wedstrijden/**

# Global CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedMethods=GET,POST,PUT,DELETE

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE

# Allow overriding of bean definitions
spring.main.allow-bean-definition-overriding=true
